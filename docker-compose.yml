services:
  api:
    build:
      context: .
    image: moleculer-ums-gateway
    env_file: docker-compose.env
    environment:
      SERVICES: api
      PORT: 6000
    depends_on:
      - nats
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.flowflex.ai`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls=true"
      - "traefik.http.routers.api.tls.certresolver=lets-encrypt"

      # Service port inside the container
      - "traefik.http.services.api.loadbalancer.server.port=6000"

      # HTTP â†’ HTTPS redirect
      - "traefik.http.routers.api-http.rule=Host(`api.flowflex.ai`)"
      - "traefik.http.routers.api-http.entrypoints=web"
      - "traefik.http.routers.api-http.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      - "6000:6000"
      - "3100:3100"
    networks:
      - internal

  flowflex-common:
    build:
      context: .
    image: moleculer-flowflex
    env_file: docker-compose.env
    environment:
      SERVICES: communication/interakt,ums/ums_organisation,utility/channel,utility/branch,utility/agent,utility/bulkaction,customer/customer,customer/list,customer/segment,customer/tag,utility/getstarted,utility/custom_folders,customer/customerexport,utility/workers,utility/dynamicfield,broadcast/broadcast_overview,integration/integrations,utility/notification
    depends_on:
      - nats
    networks:
      - internal

  flowflex-notification:
    build:
      context: .
    image: moleculer-flowflex-notification
    env_file: docker-compose.env
    environment:
      SERVICES: communication/email,communication/whatsapp,integration/supabase,broadcast/broadcast,broadcast/broadcast_stats,integration/gcp,campaign/timeline
    depends_on:
      - nats
    networks:
      - internal

  flowflex-transaction:
    build:
      context: .
    image: moleculer-flowflex-transactions
    env_file: docker-compose.env
    environment:
      SERVICES: payment/transaction,payment/phonepe,payment/pricing
    depends_on:
      - nats
    networks:
      - internal

  flowflex-payment:
    build:
      context: .
    image: moleculer-flowflex-payment
    env_file: docker-compose.env
    environment:
      SERVICES: payment/wallet,payment/razorpay,billing/daily_usage,billing/monthly_usage,billing/invoice
    depends_on:
      - nats
    networks:
      - internal

  flowflex-ums:
    build:
      context: .
    image: moleculer-flowflex-ums
    env_file: docker-compose.env
    environment:
      SERVICES: ums/ums_default_roles,ums/ums_organisation,ums/ums_password_reset,ums/ums_roles,ums/ums_scopes,ums/ums_user_organisations,ums/ums_user,ums/ums_verify
    depends_on:
      - nats
    networks:
      - internal

  flowflex-shopifyconnector:
    build:
      context: .
    image: moleculer-flowflex-shopifyconnector
    env_file: docker-compose.env
    environment:
      SERVICES: integration/shopify
    depends_on:
      - nats
    networks:
      - internal

  flowflex-flow:
    build:
      context: .
    image: moleculer-flowflex-flow
    env_file: docker-compose.env
    environment:
      SERVICES: flow/flow,flow/flow_stats,utility/pubsub,flow/default_flows,flow/subflow,flow/campaign,flow/trigger,flow/reactflow,flow/flowstore_template
    depends_on:
      - nats
    networks:
      - internal
  flowstore:
    build:
      context: .
    image: moleculer-flowstore
    env_file: docker-compose.env
    environment:
      SERVICES: flow/flowstore_category,flow/flowstore_tags,flow/flowstorecreator,flow/flowstoreflows,flow/flowstorelist,flow/flowstoreplatform
    depends_on:
      - nats
    networks:
      - internal

  redis:
    image: redis:6
    container_name: moleculer-flowflex-redis
    restart: unless-stopped
    networks:
      - internal

  nats:
    image: nats:2
    networks:
      - internal

  users-fe:
    image: nginx:alpine
    restart: unless-stopped
    networks: [internal] # same network as traefik
    volumes:
      - /home/gokul/actions-runner/_work/ums-fe/ums-fe/dist:/usr/share/nginx/html:ro
      - /home/gokul/actions-runner/_work/ums-fe/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=internal"

      # HTTPS router
      - "traefik.http.routers.users.rule=Host(`users.flowflex.ai`)"
      - "traefik.http.routers.users.entrypoints=websecure"
      - "traefik.http.routers.users.tls=true"
      - "traefik.http.routers.users.tls.certresolver=lets-encrypt"

      # Service (nginx inside port)
      - "traefik.http.services.users.loadbalancer.server.port=80"

      # HTTP -> HTTPS redirect (middleware on same service)
      - "traefik.http.routers.users-http.rule=Host(`users.flowflex.ai`)"
      - "traefik.http.routers.users-http.entrypoints=web"
      - "traefik.http.routers.users-http.middlewares=users-redirect"
      - "traefik.http.middlewares.users-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.users-redirect.redirectscheme.permanent=true"

  traefik:
    image: traefik:v2.1
    command:
      # - "--api.insecure=true" # Don't do that in production!
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=internal"
      - "--providers.file.filename=/etc/traefik/dynamic/app.toml"
      - "--providers.file.watch=true"
      - "--certificatesresolvers.lets-encrypt.acme.email=gokul@reviewbit.app"
      - "--certificatesresolvers.lets-encrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.lets-encrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.lets-encrypt.acme.httpchallenge.entrypoint=web"
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "8080:8080"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      - /home/gokul/traefik/dynamic:/etc/traefik/dynamic:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - internal
      - default

networks:
  internal:
    driver: bridge

volumes:
  letsencrypt:
  data:
