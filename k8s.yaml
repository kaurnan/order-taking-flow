#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: ""
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: nats://nats:4222
  CACHER: redis://redis:6379
  MONGO_URI: mongodb://mongo:27017/moleculer-flowflex # Updated MONGO_URI

---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
  - port: 6000 # Updated port to 6000
    targetPort: 6000 # Updated targetPort to 6000

---
#########################################################
# Ingress for Moleculer API Gateway
#########################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  #annotations:
  #  kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: moleculer-flowflex.127.0.0.1.nip.io # Updated host
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 6000 # Updated port to 6000

---
#########################################################
# API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: moleculer-ums-gateway # Updated image name
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: api
          - name: PORT
            value: "6000" # Added PORT environment variable

---
#########################################################
# MongoDB server
#########################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  replicas: 1
  serviceName: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - image: mongo
          name: mongo
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data

---
#########################################################
# Persistent volume for MongoDB
#########################################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  labels:
    name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
#########################################################
# MongoDB service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: mongo
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo          


---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
  - port: 4222
    name: nats
    targetPort: 4222

---
#########################################################
# NATS transporter
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats
        ports:
        - containerPort: 4222
          name: nats

---
#########################################################
# Redis service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    name: redis
    targetPort: 6379

---
#########################################################
# Redis server (transporter/cacher)
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis
        ports:
        - containerPort: 6379
          name: redis

---
#########################################################
# Service for flowflex-common service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-common
spec:
  selector:
    app: flowflex-common
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-common service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-common
spec:
  selector:
    matchLabels:
      app: flowflex-common
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-common
    spec:
      containers:
      - name: flowflex-common
        image: moleculer-flowflex
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: communication/interakt,ums/ums_organisation,utility/channel,utility/branch,utility/agent,utility/bulkaction,customer/customer,customer/list,customer/segment,customer/tag,utility/getstarted,utility/custom_folders,customer/customerexport,utility/workers,utility/dynamicfield,broadcast/broadcast_overview,integration/integrations,utility/notification

---
#########################################################
# Service for flowflex-notification service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-notification
spec:
  selector:
    app: flowflex-notification
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-notification service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-notification
spec:
  selector:
    matchLabels:
      app: flowflex-notification
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-notification
    spec:
      containers:
      - name: flowflex-notification
        image: moleculer-flowflex-notification
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: communication/email,communication/whatsapp,integration/supabase,broadcast/broadcast,broadcast/broadcast_stats,integration/gcp,campaign/timeline

---
#########################################################
# Service for flowflex-transaction service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-transaction
spec:
  selector:
    app: flowflex-transaction
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-transaction service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-transaction
spec:
  selector:
    matchLabels:
      app: flowflex-transaction
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-transaction
    spec:
      containers:
      - name: flowflex-transaction
        image: moleculer-flowflex-transactions
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: payment/transaction,payment/phonepe,payment/pricing

---
#########################################################
# Service for flowflex-payment service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-payment
spec:
  selector:
    app: flowflex-payment
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-payment service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-payment
spec:
  selector:
    matchLabels:
      app: flowflex-payment
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-payment
    spec:
      containers:
      - name: flowflex-payment
        image: moleculer-flowflex-payment
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: payment/wallet,payment/razorpay,billing/daily_usage,billing/monthly_usage,billing/invoice

---
#########################################################
# Service for flowflex-ums service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-ums
spec:
  selector:
    app: flowflex-ums
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-ums service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-ums
spec:
  selector:
    matchLabels:
      app: flowflex-ums
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-ums
    spec:
      containers:
      - name: flowflex-ums
        image: moleculer-flowflex-ums
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: ums/ums_default_roles,ums/ums_organisation,ums/ums_password_reset,ums/ums_roles,ums/ums_scopes,ums/ums_user_organisations,ums/ums_user,ums/ums_verify

---
#########################################################
# Service for flowflex-shopifyconnector service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-shopifyconnector
spec:
  selector:
    app: flowflex-shopifyconnector
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-shopifyconnector service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-shopifyconnector
spec:
  selector:
    matchLabels:
      app: flowflex-shopifyconnector
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-shopifyconnector
    spec:
      containers:
      - name: flowflex-shopifyconnector
        image: moleculer-flowflex-shopifyconnector
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: integration/shopify

---
#########################################################
# Service for flowflex-flow service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowflex-flow
spec:
  selector:
    app: flowflex-flow
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowflex-flow service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowflex-flow
spec:
  selector:
    matchLabels:
      app: flowflex-flow
  replicas: 2
  template:
    metadata:
      labels:
        app: flowflex-flow
    spec:
      containers:
      - name: flowflex-flow
        image: moleculer-flowflex-flow
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: flow/flow,flow/flow_stats,utility/pubsub,flow/default_flows,flow/subflow,flow/campaign,flow/trigger,flow/reactflow,flow/flowstore_template

---
#########################################################
# Service for flowstore service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: flowstore
spec:
  selector:
    app: flowstore
  ports:
  - port: 3000 # Default Moleculer port
    targetPort: 3000

---
#########################################################
# Deployment for flowstore service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flowstore
spec:
  selector:
    matchLabels:
      app: flowstore
  replicas: 2
  template:
    metadata:
      labels:
        app: flowstore
    spec:
      containers:
      - name: flowstore
        image: moleculer-flowstore
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: flow/flowstore_category,flow/flowstore_tags,flow/flowstorecreator,flow/flowstoreflows,flow/flowstorelist,flow/flowstoreplatform
